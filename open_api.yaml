openapi: 3.0.3
info:
  title: Book API
  version: 1.0.0
  description: A simple RESTful API for managing books.

servers:
  - url: http://localhost:5000
    description: Local development server

paths:
  /books:
    get:
      summary: Get all books
      description: Returns a list of all books in the library.
      responses:
        '200':
          description: A list of books.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

    post:
      summary: Add a new book
      description: Creates a new book and returns the created book.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBook'
      responses:
        '201':
          description: Book created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

  /books/{id}:
    get:
      summary: Get a book by ID
      description: Returns a single book by its ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the book to retrieve.
          schema:
            type: integer
      responses:
        '200':
          description: The requested book.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a book
      description: Updates the details of a specific book by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the book to update.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBook'
      responses:
        '200':
          description: Book updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete a book
      description: Deletes a book by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the book to delete.
          schema:
            type: integer
      responses:
        '200':
          description: Book deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Book deleted successfully
        '404':
          description: Book not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: The Great Gatsby
        author:
          type: string
          example: F. Scott Fitzgerald
        year:
          type: integer
          example: 1925
        publisher:
          type: string
          example: Scribner
        genre:
          type: string
          example: Fiction
        isbn:
          type: string
          example: 9780743273565
        available:
          type: boolean
          example: true

    NewBook:
      type: object
      required:
        - title
        - author
      properties:
        title:
          type: string
        author:
          type: string
        year:
          type: integer
        publisher:
          type: string
        genre:
          type: string
        isbn:
          type: string

    UpdateBook:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        year:
          type: integer
        publisher:
          type: string
        genre:
          type: string
        isbn:
          type: string
        available:
          type: boolean

    Error:
      type: object
      properties:
        error:
          type: string
          example: Book not found
